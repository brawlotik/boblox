local TweenService = game:GetService("TweenService")
local velocityHandlerName
local gyroHandlerName
local camera
local v3none
local v3zero
local v3inf
local controlModule
local bv
local bg
local mfly1
local mfly2
local car = workspace.Car -- Change this to your car's name in the workspace
local destination = Vector3.new(-28, 72, 1013) -- Change to your desired coordinates

local function TweenGoToCar()
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local goal = {}
    goal.Position = destination
    local tween = TweenService:Create(car.PrimaryPart, tweenInfo, goal)
    tween:Play()
end

local function EnableFly()
    velocityHandlerName = 32
    gyroHandlerName = 64
    camera = workspace.CurrentCamera
    v3none = Vector3.new()
    v3zero = Vector3.new(0, 0, 0)
    v3inf = Vector3.new(9e9, 9e9, 9e9)
    controlModule = require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))

    bv = Instance.new("BodyVelocity")
    bv.Name = tostring(velocityHandlerName)
    bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    bv.MaxForce = v3zero
    bv.Velocity = v3zero

    bg = Instance.new("BodyGyro")
    bg.Name = tostring(gyroHandlerName)
    bg.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    bg.MaxTorque = v3inf
    bg.P = 1000
    bg.D = 50

    mfly1 = game.Players.LocalPlayer.CharacterAdded:Connect(function()
        local bv = Instance.new("BodyVelocity")
        bv.Name = tostring(velocityHandlerName)
        bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        bv.MaxForce = v3zero
        bv.Velocity = v3zero

        bg = Instance.new("BodyGyro")
        bg.Name = tostring(gyroHandlerName)
        bg.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        bg.MaxTorque = v3inf
        bg.P = 1000
        bg.D = 50
    end)

    mfly2 = game:GetService('RunService').RenderStepped:Connect(function()
        camera = workspace.CurrentCamera
        local speed = tonumber(SpeedTextBox.Text) or 1 -- Default to 1 if input is invalid

        if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") 
            and game.Players.LocalPlayer.Character.HumanoidRootPart 
            and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(tostring(velocityHandlerName)) 
            and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(tostring(gyroHandlerName)) then

            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
            local VelocityHandler = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(tostring(velocityHandlerName))
            local GyroHandler = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(tostring(gyroHandlerName))

            VelocityHandler.MaxForce = v3inf
            GyroHandler.MaxTorque = v3inf
            GyroHandler.CFrame = camera.CFrame

            local direction = controlModule:GetMoveVector()
            local calculatedVelocity = v3none

            -- Apply movement based on direction and speed
            calculatedVelocity = calculatedVelocity 
                                 + camera.CFrame.RightVector * direction.X * speed * 50
                                 - camera.CFrame.LookVector * direction.Z * speed * 50

            VelocityHandler.Velocity = calculatedVelocity
        end
    end)
end

TweenGoToCar()
