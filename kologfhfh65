
-- Services
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualUser = game:GetService("VirtualUser")

-- **Function to set transparency of all BaseParts**
local function setTransparency(object)
    if object:IsA("BasePart") and object.Transparency ~= 1 then
        object.Transparency = 1
    end
end

-- **Function to set material of all BaseParts to Plastic**
local function setMaterialToPlastic(object)
    if object:IsA("BasePart") and object.Material ~= Enum.Material.Plastic then
        object.Material = Enum.Material.Plastic
    end
end

-- **Function to process all parts in Workspace**
local function processWorkspace()
    for _, object in pairs(Workspace:GetDescendants()) do
        setTransparency(object)
        setMaterialToPlastic(object)
    end
end

-- Initial processing for existing parts
processWorkspace()

-- Event: Process new parts added to Workspace
Workspace.DescendantAdded:Connect(function(object)
    setTransparency(object)
    setMaterialToPlastic(object)
end)

-- Periodic Cleanup (Optional)
task.spawn(function()
    while true do
        processWorkspace()
        task.wait(5) -- Adjust interval as needed
    end
end)

-- **Function to clear Lighting**
local function clearLighting()
    for _, object in pairs(Lighting:GetChildren()) do
        object:Destroy()
    end
end

-- Initial cleanup of Lighting
clearLighting()

-- Event: Destroy new objects added to Lighting
Lighting.ChildAdded:Connect(function(child)
    child:Destroy()
end)

-- **Toggle 3D Rendering**
task.spawn(function()
    local isRenderingEnabled = true
    while true do
        isRenderingEnabled = not isRenderingEnabled
        RunService:Set3dRenderingEnabled(isRenderingEnabled)
        task.wait(1) -- Toggle every 60 seconds
    end
end)

-- Get the local player
local player = Players.LocalPlayer

-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "BlackLabelGui"
screenGui.ResetOnSpawn = false -- Prevent the GUI from resetting after death
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global -- Ensures it is rendered above game menus

-- Create a Frame for the black label
local blackLabel = Instance.new("Frame")
blackLabel.Parent = screenGui
blackLabel.Size = UDim2.new(1, 0, 1, 0) -- Full-screen size
blackLabel.Position = UDim2.new(0, 0, 0, 0)
blackLabel.BackgroundColor3 = Color3.new(0, 0, 0) -- Black color
blackLabel.BorderSizePixel = 0 -- No border
blackLabel.ZIndex = 10 -- Ensure the Frame is rendered above other UI elements

-- Anti-AFK Mechanism
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    statusText.Text = "Roblox tried to kick you, but I stopped it!"
    task.wait(2)
    statusText.Text = "Status: Active"
end)
